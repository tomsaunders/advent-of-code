{"version":3,"file":"1.js","sourceRoot":"","sources":["../1.ts"],"names":[],"mappings":";;;AACA,uBAAyB;AACzB,IAAM,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;AACpD,IAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAE9B,IAAK,GAOJ;AAPD,WAAK,GAAG;IACN,uBAAC,CAAA;IACD,uBAAC,CAAA;IACD,uBAAC,CAAA;IACD,uBAAC,CAAA;IACD,cAAO,CAAA;IACP,cAAO,CAAA;AACT,CAAC,EAPI,GAAG,KAAH,GAAG,QAOP;AACD,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAChB,IAAM,KAAK,GAAG,IAAI,GAAG,EAAY,CAAC;AAClC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACxB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACxB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACxB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACxB,IAAM,IAAI,GAAG,IAAI,GAAG,EAAY,CAAC;AACjC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAEvB,IAAI,EAAE,GAAG,CAAC,CAAC;AACX,IAAI,EAAE,GAAG,CAAC,CAAC;AACX,KAAmB,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG,EAAE;IAAnB,IAAM,IAAI,YAAA;IACb,IAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,IAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;QACf,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAG,CAAC;KACxB;SAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;QACtB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAG,CAAC;KACvB;IACD,QAAQ,GAAG,EAAE;QACX,KAAK,GAAG,CAAC,CAAC;YACR,EAAE,IAAI,CAAC,CAAC;YACR,MAAM;QACR,KAAK,GAAG,CAAC,CAAC;YACR,EAAE,IAAI,CAAC,CAAC;YACR,MAAM;QACR,KAAK,GAAG,CAAC,CAAC;YACR,EAAE,IAAI,CAAC,CAAC;YACR,MAAM;QACR,KAAK,GAAG,CAAC,CAAC;YACR,EAAE,IAAI,CAAC,CAAC;YACR,MAAM;KACT;IACD,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,YAAU,EAAE,SAAI,EAAI,CAAC,CAAC;CAC/C;AAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC","sourcesContent":["#!/usr/bin/env npx ts-node --pretty\nimport * as fs from \"fs\";\nconst input = fs.readFileSync(\"input1.txt\", \"utf8\");\nconst ins = input.split(\", \");\n\nenum Dir {\n  N,\n  E,\n  S,\n  W,\n  R = \"R\",\n  L = \"L\"\n}\nlet dir = Dir.N;\nconst right = new Map<Dir, Dir>();\nright.set(Dir.N, Dir.E);\nright.set(Dir.E, Dir.S);\nright.set(Dir.S, Dir.W);\nright.set(Dir.W, Dir.N);\nconst left = new Map<Dir, Dir>();\nleft.set(Dir.N, Dir.W);\nleft.set(Dir.W, Dir.S);\nleft.set(Dir.S, Dir.E);\nleft.set(Dir.E, Dir.N);\n\nlet px = 0;\nlet py = 0;\nfor (const turn of ins) {\n  const t = turn.substring(0, 1);\n  const l = parseInt(turn.substring(1), 10);\n  if (t === Dir.R) {\n    dir = right.get(dir)!!;\n  } else if (t === Dir.L) {\n    dir = left.get(dir)!!;\n  }\n  switch (dir) {\n    case Dir.N:\n      py -= l;\n      break;\n    case Dir.E:\n      px += l;\n      break;\n    case Dir.S:\n      py += l;\n      break;\n    case Dir.W:\n      px -= l;\n      break;\n  }\n  console.log(turn, t, l, `Now at ${px},${py}`);\n}\n\nconsole.log(Math.abs(px) + Math.abs(py));\n"]}